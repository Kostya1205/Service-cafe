const csrfToken = document.querySelector('meta[name="_csrf"]').content;
const csrfHeader = document.querySelector('meta[name="_csrf_header"]').content;
//All category to page
let categoryData = [];
//All items from server
let itemsToPage = [];
//Items in order on page
let orderItems = [];
//Shift state
let shift=[]

getCategoriesToPage();
getItemsToPage();

//Display main container
function displayMainContainer() {
    let headButtons = document.getElementById('buttons-head');
    headButtons.innerHTML = '';
    let settingsButton = document.createElement('button');
    settingsButton.classList.add('button-in-header');
    settingsButton.textContent = '‚ò∏';
    settingsButton.onclick = function() {
        displaySettings();
    }
    headButtons.appendChild(settingsButton);
    // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    let mainContainer = document.getElementById('main-container');

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
    mainContainer.innerHTML = '';

    // –°–æ–∑–¥–∞–µ–º –ª–µ–≤—É—é —á–∞—Å—Ç—å (leftContainer)
    let leftContainer = document.createElement('div');
    leftContainer.classList.add('left');
    leftContainer.id = 'leftContainer';

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤—É—é —á–∞—Å—Ç—å (rightContainer)
    let rightContainer = document.createElement('div');
    rightContainer.classList.add('right');

    let orderList = document.createElement('div');
    orderList.classList.add('order-list');

    let table = document.createElement('table');
    let tbody = document.createElement('tbody');
    tbody.id = 'order-items';
    table.appendChild(tbody);

    orderList.appendChild(table);

    let total = document.createElement('h3');
    total.classList.add('total');
    total.id = 'total';
    total.textContent = '0.00 —Ä';

    let payButton = document.createElement('button');
    payButton.type = 'button';
    payButton.className = 'button';
    payButton.textContent = '–û–ø–ª–∞—Ç–∏—Ç—å';
    payButton.onclick = function() {
        checkOrderAndDisplayPayBlock();
    };

    rightContainer.appendChild(orderList);
    rightContainer.appendChild(total);
    rightContainer.appendChild(payButton);

    // –î–æ–±–∞–≤–ª—è–µ–º –ª–µ–≤—É—é –∏ –ø—Ä–∞–≤—É—é —á–∞—Å—Ç–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    mainContainer.appendChild(leftContainer);
    mainContainer.appendChild(rightContainer);
    displayCategories();
    displayOrder();
}

//Display settings page
function displaySettings() {
    let headButtons = document.getElementById('buttons-head');
    headButtons.innerHTML = '';
    let backButton = document.createElement('buttonBack');
    backButton.classList.add('button-in-header');
    backButton.textContent = 'üîô';
    backButton.onclick = function() {
        displayMainContainer();
    }
    headButtons.appendChild(backButton);


    let mainContainer = document.getElementById('main-container');

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
    mainContainer.innerHTML = '';

    // –°–æ–∑–¥–∞–µ–º –ª–µ–≤—É—é —á–∞—Å—Ç—å (leftContainer)
    let leftContainer = document.createElement('div');
    leftContainer.classList.add('left-settings');

    let shiftButton = document.createElement('button');
    shiftButton.id = "shiftButton";
    shiftButton.type = 'button';
    shiftButton.className = 'button-in-settings';
    checkShiftButtonState();

    let xButton = document.createElement('button');
    xButton.type = 'button';
    xButton.className = 'button-in-settings';
    xButton.textContent = 'X-–û—Ç—á—ë—Ç';
    xButton.onclick = function() {
        xReportButtonClick();
    };
    let collectionButton = document.createElement('button');
    collectionButton.type = 'button';
    collectionButton.className = 'button-in-settings';
    collectionButton.textContent = '–ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è';
    collectionButton.onclick = function() {
        showCollection();
    };
    leftContainer.appendChild(shiftButton);
    leftContainer.appendChild(xButton);
    leftContainer.appendChild(collectionButton);
    mainContainer.appendChild(leftContainer);

}

function displayPayBlock(){
    let headButtons = document.getElementById('buttons-head');
    headButtons.innerHTML = '';
    let backButton = document.createElement('buttonBack');
    backButton.classList.add('button-in-header');
    backButton.textContent = 'üîô';
    backButton.onclick = function() {
        displayMainContainer();
    }
    headButtons.appendChild(backButton);


    let mainContainer = document.getElementById('main-container');

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
    mainContainer.innerHTML = '';

    let rightContainer = document.createElement('div');
    rightContainer.classList.add('right-pay');

    mainContainer.appendChild(getInputForm());
    mainContainer.appendChild(rightContainer);

    submitOrder();


}

//Show pay block
function checkOrderAndDisplayPayBlock() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getOpenShift', true);
    xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            if(xhr.responseText)
                shift = JSON.parse(xhr.responseText);
            shift=xhr.responseText;
            // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ
            if (shift) {
                if (orderItems.length<1){
                    return showMessage('–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑!!!');
                }
                displayPayBlock();
            } else {
                showMessage();
            }
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

function showCollection() {
    let mainContainer = document.getElementById('main-container');
    let rightContainer = document.getElementById('right-container');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç rightContainer
    if (rightContainer) {
        // –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
        rightContainer.remove();
        return
    }
    rightContainer = document.createElement('div');
    rightContainer.id='right-container';
    rightContainer.classList.add('right-settings');
    let rightContainerChild = document.createElement('div');
    rightContainerChild.classList.add('right-settings-button-container');

    
    let addCashButton = document.createElement('button');
    addCashButton.type = 'button';
    addCashButton.className = 'button-in-settings';
    addCashButton.textContent = '–í–Ω–µ—Å—Ç–∏';
    addCashButton.onclick = function() {
        sendCollectionMove(true);
    };
    let takeCashButton = document.createElement('button');
    takeCashButton.type = 'button';
    takeCashButton.className = 'button-in-settings';
    takeCashButton.textContent = '–ò–∑—ä—è—Ç—å';
    takeCashButton.onclick = function() {
        sendCollectionMove(false);
    };

    let sumInCashRegister = document.createElement('div');
    sumInCashRegister.id = 'sum-in-cashRegister';
    sumInCashRegister.classList.add('sum-in-cash-register');
    getSumInCashRegister();
    rightContainer.appendChild(getInputForm());
    rightContainerChild.appendChild(addCashButton);
    rightContainerChild.appendChild(takeCashButton);
    rightContainerChild.appendChild(sumInCashRegister);
    rightContainer.appendChild(rightContainerChild);
    mainContainer.appendChild(rightContainer);
}
//Get sum in Cash Register
function getSumInCashRegister() {
// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/sumInCashRegister', true);
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            document.getElementById('sum-in-cashRegister').textContent = '–í –∫–∞—Å—Å–µ: '+xhr.responseText+' —Ä—É–±';
        }
    };
    xhr.send();
}
//Send move of cash in cashRegister
function sendCollectionMove(collectionType) {
    let collection = ({
        typeOfOperation: collectionType,
        sumOfOperation: (parseFloat(document.getElementById('sum-input').innerText).toFixed(2)*100) // –ú–∞—Å—Å–∏–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∑–∞–∫–∞–∑–µ
    });
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getOpenShift', true);
    xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            if(xhr.responseText)
                shift = JSON.parse(xhr.responseText);
            shift=xhr.responseText;
            // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ
            if (shift) {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                let xhr = new XMLHttpRequest();
                xhr.open('POST', '/collectionMove', true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        showMessage('–ò–Ω–∫–∞—Å—Å–∞—Ü–∏—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!!!','green');
                        getSumInCashRegister();
                    }else{
                        showMessage("–í –∫–∞—Å—Å–µ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!!!");}
                };
                xhr.send(JSON.stringify(collection));
            } else {
                showMessage();
            }
        }
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}
//Display categories to page
function displayCategories() {
    let leftContainer = document.getElementById('leftContainer');
    leftContainer.innerHTML = "";
    // –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –¥–∞–Ω–Ω—ã–º –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    categoryData.forEach(function(categories) {
        const categoryDiv = document.createElement('div');
        categoryDiv.classList.add('child-block');

        categoryDiv.textContent = categories.categoriesName;
        categoryDiv.onclick = function() {
            displayProducts(categories);
        };
        leftContainer.appendChild(categoryDiv);
    });
}

//Display order to page
function displayProducts(categories) {
    let leftContainer = document.getElementById('leftContainer');
    leftContainer.innerHTML = "";

    let backDiv = document.createElement('div');
    backDiv.classList.add('child-block');
    backDiv.onclick = function() {
        displayCategories();
    }
    let backDivHeading = document.createElement('h2');
    backDivHeading.textContent = '–í–µ—Ä–Ω—É—Ç—å—Å—è';
    backDiv.appendChild(backDivHeading);
    backDiv.style.backgroundColor = "red";
    leftContainer.appendChild(backDiv);

    categories.items.forEach(function(item) {
        let productDiv = document.createElement('div');
        productDiv.classList.add('child-block');
        productDiv.onclick = function() {
            addProduct(item.id);
        };

        let productInfoDiv =
            document.createElement('div');
        productInfoDiv.classList.add('child-block-Info');

        let itemNameHeading = document.createElement('div');
        itemNameHeading.textContent = item.nameOfItems;

        let itemPriceParagraph = document.createElement('div');
        itemPriceParagraph.textContent = (item.price / 100).toFixed(2) + " —Ä—É–±";

        productInfoDiv.appendChild(itemNameHeading);
        productInfoDiv.appendChild(itemPriceParagraph);
        productDiv.appendChild(productInfoDiv);

        leftContainer.appendChild(productDiv);
    });
}

//Return sum input form
function getInputForm() {
    let inputForm = document.createElement('div')
    inputForm.classList.add('sum-input-container')
    let sumInputContainer = document.createElement('div');
    sumInputContainer.classList.add('sum-input-container-child')

    let sumInput = document.createElement('div');
    sumInput.classList.add('sum-input');
    sumInput.id = 'sum-input';
    sumInput.textContent = '';
    let label = document.createElement('div');
    label.textContent = '—Ä—É–±';
    let buttonClear = document.createElement('button');
    buttonClear.classList.add('button-clear-form-input');
    buttonClear.textContent = '√ó';
    buttonClear.onclick = ClearInputFormSum;
    let buttonContainer = document.createElement('div');
    // buttonContainer.classList.add('sum-input-container');
    for (let i = 1; i <= 9; i++) {
        let button = createButtonToSumElement(i);
        buttonContainer.appendChild(button);
    }
    let dotButton = createButtonToSumElement('.');
    buttonContainer.appendChild(dotButton);
    let zeroButton = createButtonToSumElement('0');
    buttonContainer.appendChild(zeroButton);
    let deleteButton = createButtonToSumElement('‚å´');
    deleteButton.onclick = deleteLastChar;
    buttonContainer.appendChild(deleteButton);

    sumInputContainer.appendChild(sumInput);
    sumInputContainer.appendChild(label);
    sumInputContainer.appendChild(buttonClear);

    inputForm.appendChild(sumInputContainer);
    inputForm.appendChild(buttonContainer);
    return inputForm;
}

//Clear all char from input form sum element
function ClearInputFormSum() {
    let sumInput = document.getElementById('sum-input');
    sumInput.textContent ='';
}

//Delete last char from input form sum element
function deleteLastChar() {
    let sumInput = document.getElementById('sum-input');
    let currentText = sumInput.textContent;
    sumInput.textContent = currentText.slice(0, -1);
}

//Append Char to sum Input element
function appendToInput(value) {
    let inputElement = document.getElementById('sum-input');
    let currentValue = inputElement.textContent;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ—á–∫–∏ –≤ —Ç–µ–∫—É—â–µ–º –≤–≤–æ–¥–µ
    let hasDot = currentValue.includes('.');
    if(hasDot&&value==='.') {
        return;
        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –≤–≤–æ–¥ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É, –Ω–æ –ø–æ—Å–ª–µ –Ω–µ—ë –Ω–µ—Ç —á–∏—Å–ª–∞
    }else if (!hasDot || (hasDot && !/\d$/.test(currentValue))) {
        // –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ —Ç–æ—á–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º 0 –ø–µ—Ä–µ–¥ –Ω–µ–π
        if (value === '.' && !/\d$/.test(currentValue)) {
            inputElement.textContent += '0';
        }
        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –≤–≤–æ–¥ - –Ω–æ–ª—å –∏ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ, —Ç–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –Ω–æ–≤—ã–º –≤–≤–æ–¥–æ–º
        else if (currentValue === '0' && /\d/.test(value)) {
            inputElement.textContent = value;
        }
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–≤–æ–¥ –∫ —Ç–µ–∫—É—â–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é
        else {
            inputElement.textContent += value;
        }
    }

    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –≤–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É
    else if (hasDot) {
        // –†–∞–∑–±–∏–≤–∞–µ–º —á–∏—Å–ª–æ –Ω–∞ —Ü–µ–ª—É—é –∏ –¥–µ—Å—è—Ç–∏—á–Ω—É—é —á–∞—Å—Ç–∏
        let parts = currentValue.split('.');
        let integerPart = parts[0];
        let decimalPart = parts[1] || '';

        // –ï—Å–ª–∏ –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —á–∞—Å—Ç–∏ —É–∂–µ –µ—Å—Ç—å –¥–≤–∞ –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ
        if (decimalPart.length < 2) {
            // –î–æ–±–∞–≤–ª—è–µ–º –≤–≤–æ–¥ –∫ —Ç–µ–∫—É—â–µ–π –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —á–∞—Å—Ç–∏
            inputElement.textContent += value;
        }
    }

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤–≤–æ–¥, —á—Ç–æ–±—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª 10000
    if (parseFloat(inputElement.textContent) > 10000) {
        inputElement.textContent = '10000';
    }
}

//Create button to sum input form
function createButtonToSumElement(value) {
    let button = document.createElement('button');
    button.className = 'button-sum-input';
    button.textContent = value;
    button.onclick = function() {
        appendToInput(value);
    };
    return button;
}

//Add product to order
function addProduct(id) {
    // –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –ø–æ –∏–º–µ–Ω–∏
    const existingProduct = orderItems.find(orderItems => (orderItems.items.id === id));

    if (existingProduct) {
        // –ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        existingProduct.quantity += 1;
    } else {
        let items = itemsToPage.find(items => (items.id === id));
        // –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
        orderItems.push({
            quantity: 1,
            items
        });
    }
    displayOrder();
}

//Display order to page
function displayOrder() {
    const orderItemTable = document.getElementById("order-items");
    orderItemTable.innerHTML = "";
    let total = 0;

    orderItems.forEach((item, index) => {
        const row = document.createElement("tr");
        const itemCell = document.createElement("td");
        const quantityCell = document.createElement("td");
        const totalCell = document.createElement("td");
        const removeCell = document.createElement("td");
        const removeButton = document.createElement("button");

        itemCell.textContent = item.items.nameOfItems;
        quantityCell.textContent = item.quantity;
        const itemTotal = ((item.items.price * item.quantity) / 100).toFixed(2) + " —Ä";
        totalCell.textContent = itemTotal;
        removeButton.textContent = "–£–¥–∞–ª–∏—Ç—å";
        removeButton.classList.add("remove-button");
        removeButton.addEventListener("click", () => removeItem(index));

        quantityCell.style.width = "10%";
        quantityCell.style.textAlign = "center"
        quantityCell.classList.add("order-table-td");

        itemCell.style.width = "50%";
        itemCell.classList.add("order-table-td");

        totalCell.style.width = "20%";
        totalCell.style.textAlign = "center"
        totalCell.classList.add("order-table-td");

        removeCell.style.width = "20%";
        removeCell.classList.add("order-table-td");

        row.appendChild(quantityCell);
        row.appendChild(itemCell);
        row.appendChild(totalCell);
        removeCell.appendChild(removeButton);
        row.appendChild(removeCell);

        orderItemTable.appendChild(row);

        total += parseFloat(itemTotal) * 100;
    });

    document.getElementById("total").textContent = (total / 100).toFixed(2) + " —Ä";
}

//Remove item from page
function removeItem(index) {
    orderItems.splice(index, 1);
    displayOrder();
}

//Clear order on page
function clearOrder() {
    orderItems = [];
}

//Send order to server
function submitOrder() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getOpenShift', true);
    xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            if(xhr.responseText)
                shift = JSON.parse(xhr.responseText);
            shift=xhr.responseText;
            // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ
            if (shift) {
                // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
                let orders = ({
                    paymentMethod: true,
                    orderItems, // –ú–∞—Å—Å–∏–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∑–∞–∫–∞–∑–µ
                });
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                let xhr = new XMLHttpRequest();
                xhr.open('POST', '/submitOrder', true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        console.log('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
                        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
                        clearOrder();
                    }
                };
                xhr.send(JSON.stringify(orders));
            } else {
                showMessage();
            }
        }
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}


//Check state of shift and set corresponding button
function checkShiftButtonState() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getOpenShift', true);
    xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            if(xhr.responseText)
                shift = JSON.parse(xhr.responseText);
            shift=xhr.responseText;
            // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ
            let shiftButton = document.getElementById("shiftButton");
            if (shift) {
                shiftButton.textContent = '–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É';
                shiftButton.onclick = function() {
                    closeShift(shiftButton);
                };
            } else {
                shiftButton.textContent = '–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É';
                shiftButton.onclick = function() {
                    openShift(shiftButton);
                };
            }
        }
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Show message in messages div
function showMessage(message='–û—Ç–∫—Ä–æ–π—Ç–µ —Å–º–µ–Ω—É!!!',color='red'){
    let messageElement = document.getElementById('messages');
    messageElement.style.fontSize = "26px";
    messageElement.style.color = color;
    messageElement.textContent = message;
    let displayTime = 5000; // –Ω–∞–ø—Ä–∏–º–µ—Ä, 5000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ (5 —Å–µ–∫—É–Ω–¥)
    setTimeout(function() {
        messageElement.textContent = ''; // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    }, displayTime);
}

//Send GET request to open shift and changing shift button state
function openShift(shiftButton) {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/openShift', true);
    xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            shift = JSON.parse(xhr.responseText);

            // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ
                shiftButton.textContent = '–ó–∞–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É';
                shiftButton.onclick = function() {
                    closeShift(shiftButton);
                };
            }
        };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Send GET request to close shift and changing shift button state
function closeShift(shiftButton) {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/closeShift', true);
    xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange =  function() {
        // –∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 (OK)
        if (xhr.readyState === 4 && xhr.status === 200)
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            console.log(xhr.responseText);
        shiftButton.textContent = '–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É';
        shiftButton.onclick = function() {
            openShift(shiftButton);
        };

    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Checking state of shift and calls xReportSend
function xReportButtonClick() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getOpenShift', true);
    xhr.setRequestHeader(csrfHeader, csrfToken);

    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            if (xhr.responseText)
                shift = JSON.parse(xhr.responseText);
            shift = xhr.responseText;
            // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ
            if (shift) {
                xReportSend();
            } else {
                showMessage();
            }
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Sending GET request to X-Report
function xReportSend(){
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getXReport', true);
    xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange = function () {
        // –∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 (OK)
        if (xhr.readyState === 4 && xhr.status === 200)
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            console.log(xhr.responseText);
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
    }

//Sending GET request that returns all Categories
function getCategoriesToPage() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getCategory', true);
    xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange = function() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω (readyState = 4)
        // –∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 (OK)
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            categoryData = JSON.parse(xhr.responseText);
            displayMainContainer()
            displayCategories();
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}

//Sending GET request that returns all Items
function getItemsToPage() {
    let xhr = new XMLHttpRequest();
    xhr.open('GET', '/getItemsToPage', true);
    xhr.setRequestHeader(csrfHeader, csrfToken); // –ü–µ—Ä–µ–¥–∞—á–∞ CSRF-—Ç–æ–∫–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    xhr.onreadystatechange = function() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω (readyState = 4)
        // –∏ —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ 200 (OK)
        if (xhr.readyState === 4 && xhr.status === 200) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            itemsToPage = JSON.parse(xhr.responseText);
        }
    };
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    xhr.send();
}